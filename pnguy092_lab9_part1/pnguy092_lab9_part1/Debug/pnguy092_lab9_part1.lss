
pnguy092_lab9_part1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000007d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000760  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800100  00800100  000007d4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007d4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000804  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000844  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008de  00000000  00000000  00000884  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000814  00000000  00000000  00001162  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000047b  00000000  00000000  00001976  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  00001df4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000448  00000000  00000000  00001eb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000014e  00000000  00000000  000022fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000244a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a5 30       	cpi	r26, 0x05	; 5
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	b1 d0       	rcall	.+354    	; 0x20c <main>
  aa:	58 c3       	rjmp	.+1712   	; 0x75c <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <set_PWM>:
    set_PWM(0);
}
void PWM_off() {
    TCCR3A = 0x00;
    TCCR3B = 0x00;
}
  ae:	0f 93       	push	r16
  b0:	1f 93       	push	r17
  b2:	cf 93       	push	r28
  b4:	df 93       	push	r29
  b6:	00 d0       	rcall	.+0      	; 0xb8 <set_PWM+0xa>
  b8:	00 d0       	rcall	.+0      	; 0xba <set_PWM+0xc>
  ba:	cd b7       	in	r28, 0x3d	; 61
  bc:	de b7       	in	r29, 0x3e	; 62
  be:	69 83       	std	Y+1, r22	; 0x01
  c0:	7a 83       	std	Y+2, r23	; 0x02
  c2:	8b 83       	std	Y+3, r24	; 0x03
  c4:	9c 83       	std	Y+4, r25	; 0x04
  c6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  ca:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  ce:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <_edata+0x2>
  d2:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <_edata+0x3>
  d6:	9c 01       	movw	r18, r24
  d8:	ad 01       	movw	r20, r26
  da:	69 81       	ldd	r22, Y+1	; 0x01
  dc:	7a 81       	ldd	r23, Y+2	; 0x02
  de:	8b 81       	ldd	r24, Y+3	; 0x03
  e0:	9c 81       	ldd	r25, Y+4	; 0x04
  e2:	c3 d1       	rcall	.+902    	; 0x46a <__cmpsf2>
  e4:	88 23       	and	r24, r24
  e6:	09 f4       	brne	.+2      	; 0xea <set_PWM+0x3c>
  e8:	71 c0       	rjmp	.+226    	; 0x1cc <set_PWM+0x11e>
  ea:	20 e0       	ldi	r18, 0x00	; 0
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	a9 01       	movw	r20, r18
  f0:	69 81       	ldd	r22, Y+1	; 0x01
  f2:	7a 81       	ldd	r23, Y+2	; 0x02
  f4:	8b 81       	ldd	r24, Y+3	; 0x03
  f6:	9c 81       	ldd	r25, Y+4	; 0x04
  f8:	b8 d1       	rcall	.+880    	; 0x46a <__cmpsf2>
  fa:	88 23       	and	r24, r24
  fc:	51 f4       	brne	.+20     	; 0x112 <set_PWM+0x64>
  fe:	81 e9       	ldi	r24, 0x91	; 145
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	21 e9       	ldi	r18, 0x91	; 145
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	f9 01       	movw	r30, r18
 108:	20 81       	ld	r18, Z
 10a:	28 70       	andi	r18, 0x08	; 8
 10c:	fc 01       	movw	r30, r24
 10e:	20 83       	st	Z, r18
 110:	09 c0       	rjmp	.+18     	; 0x124 <set_PWM+0x76>
 112:	81 e9       	ldi	r24, 0x91	; 145
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	21 e9       	ldi	r18, 0x91	; 145
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	f9 01       	movw	r30, r18
 11c:	20 81       	ld	r18, Z
 11e:	23 60       	ori	r18, 0x03	; 3
 120:	fc 01       	movw	r30, r24
 122:	20 83       	st	Z, r18
 124:	28 e5       	ldi	r18, 0x58	; 88
 126:	39 e3       	ldi	r19, 0x39	; 57
 128:	44 e7       	ldi	r20, 0x74	; 116
 12a:	5f e3       	ldi	r21, 0x3F	; 63
 12c:	69 81       	ldd	r22, Y+1	; 0x01
 12e:	7a 81       	ldd	r23, Y+2	; 0x02
 130:	8b 81       	ldd	r24, Y+3	; 0x03
 132:	9c 81       	ldd	r25, Y+4	; 0x04
 134:	9a d1       	rcall	.+820    	; 0x46a <__cmpsf2>
 136:	88 23       	and	r24, r24
 138:	44 f4       	brge	.+16     	; 0x14a <set_PWM+0x9c>
 13a:	88 e9       	ldi	r24, 0x98	; 152
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	2f ef       	ldi	r18, 0xFF	; 255
 140:	3f ef       	ldi	r19, 0xFF	; 255
 142:	fc 01       	movw	r30, r24
 144:	31 83       	std	Z+1, r19	; 0x01
 146:	20 83       	st	Z, r18
 148:	30 c0       	rjmp	.+96     	; 0x1aa <set_PWM+0xfc>
 14a:	20 e0       	ldi	r18, 0x00	; 0
 14c:	34 e2       	ldi	r19, 0x24	; 36
 14e:	44 ef       	ldi	r20, 0xF4	; 244
 150:	56 e4       	ldi	r21, 0x46	; 70
 152:	69 81       	ldd	r22, Y+1	; 0x01
 154:	7a 81       	ldd	r23, Y+2	; 0x02
 156:	8b 81       	ldd	r24, Y+3	; 0x03
 158:	9c 81       	ldd	r25, Y+4	; 0x04
 15a:	99 d2       	rcall	.+1330   	; 0x68e <__gesf2>
 15c:	18 16       	cp	r1, r24
 15e:	34 f4       	brge	.+12     	; 0x16c <set_PWM+0xbe>
 160:	88 e9       	ldi	r24, 0x98	; 152
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	fc 01       	movw	r30, r24
 166:	11 82       	std	Z+1, r1	; 0x01
 168:	10 82       	st	Z, r1
 16a:	1f c0       	rjmp	.+62     	; 0x1aa <set_PWM+0xfc>
 16c:	08 e9       	ldi	r16, 0x98	; 152
 16e:	10 e0       	ldi	r17, 0x00	; 0
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	30 e0       	ldi	r19, 0x00	; 0
 174:	40 e0       	ldi	r20, 0x00	; 0
 176:	53 e4       	ldi	r21, 0x43	; 67
 178:	69 81       	ldd	r22, Y+1	; 0x01
 17a:	7a 81       	ldd	r23, Y+2	; 0x02
 17c:	8b 81       	ldd	r24, Y+3	; 0x03
 17e:	9c 81       	ldd	r25, Y+4	; 0x04
 180:	8a d2       	rcall	.+1300   	; 0x696 <__mulsf3>
 182:	dc 01       	movw	r26, r24
 184:	cb 01       	movw	r24, r22
 186:	9c 01       	movw	r18, r24
 188:	ad 01       	movw	r20, r26
 18a:	60 e0       	ldi	r22, 0x00	; 0
 18c:	74 e2       	ldi	r23, 0x24	; 36
 18e:	84 ef       	ldi	r24, 0xF4	; 244
 190:	9a e4       	ldi	r25, 0x4A	; 74
 192:	6f d1       	rcall	.+734    	; 0x472 <__divsf3>
 194:	dc 01       	movw	r26, r24
 196:	cb 01       	movw	r24, r22
 198:	bc 01       	movw	r22, r24
 19a:	cd 01       	movw	r24, r26
 19c:	d2 d1       	rcall	.+932    	; 0x542 <__fixsfsi>
 19e:	dc 01       	movw	r26, r24
 1a0:	cb 01       	movw	r24, r22
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	f8 01       	movw	r30, r16
 1a6:	91 83       	std	Z+1, r25	; 0x01
 1a8:	80 83       	st	Z, r24
 1aa:	84 e9       	ldi	r24, 0x94	; 148
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	fc 01       	movw	r30, r24
 1b0:	11 82       	std	Z+1, r1	; 0x01
 1b2:	10 82       	st	Z, r1
 1b4:	89 81       	ldd	r24, Y+1	; 0x01
 1b6:	9a 81       	ldd	r25, Y+2	; 0x02
 1b8:	ab 81       	ldd	r26, Y+3	; 0x03
 1ba:	bc 81       	ldd	r27, Y+4	; 0x04
 1bc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 1c0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 1c4:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <_edata+0x2>
 1c8:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <_edata+0x3>
 1cc:	00 00       	nop
 1ce:	0f 90       	pop	r0
 1d0:	0f 90       	pop	r0
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
 1d6:	df 91       	pop	r29
 1d8:	cf 91       	pop	r28
 1da:	1f 91       	pop	r17
 1dc:	0f 91       	pop	r16
 1de:	08 95       	ret

000001e0 <PWM_on>:
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	cd b7       	in	r28, 0x3d	; 61
 1e6:	de b7       	in	r29, 0x3e	; 62
 1e8:	80 e9       	ldi	r24, 0x90	; 144
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	20 e4       	ldi	r18, 0x40	; 64
 1ee:	fc 01       	movw	r30, r24
 1f0:	20 83       	st	Z, r18
 1f2:	81 e9       	ldi	r24, 0x91	; 145
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	2b e0       	ldi	r18, 0x0B	; 11
 1f8:	fc 01       	movw	r30, r24
 1fa:	20 83       	st	Z, r18
 1fc:	60 e0       	ldi	r22, 0x00	; 0
 1fe:	70 e0       	ldi	r23, 0x00	; 0
 200:	cb 01       	movw	r24, r22
 202:	55 df       	rcall	.-342    	; 0xae <set_PWM>
 204:	00 00       	nop
 206:	df 91       	pop	r29
 208:	cf 91       	pop	r28
 20a:	08 95       	ret

0000020c <main>:


int main(void)
{
 20c:	cf 93       	push	r28
 20e:	df 93       	push	r29
 210:	cd b7       	in	r28, 0x3d	; 61
 212:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
    DDRA = 0x00; PORTA = 0xFF;
 214:	81 e2       	ldi	r24, 0x21	; 33
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	fc 01       	movw	r30, r24
 21a:	10 82       	st	Z, r1
 21c:	82 e2       	ldi	r24, 0x22	; 34
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	2f ef       	ldi	r18, 0xFF	; 255
 222:	fc 01       	movw	r30, r24
 224:	20 83       	st	Z, r18
    DDRB = 0x0FF; PORTB = 0x00;
 226:	84 e2       	ldi	r24, 0x24	; 36
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	2f ef       	ldi	r18, 0xFF	; 255
 22c:	fc 01       	movw	r30, r24
 22e:	20 83       	st	Z, r18
 230:	85 e2       	ldi	r24, 0x25	; 37
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	fc 01       	movw	r30, r24
 236:	10 82       	st	Z, r1
    PWM_on();
 238:	d3 df       	rcall	.-90     	; 0x1e0 <PWM_on>
    state = Start;
 23a:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <state>
    while (1) 
    {
        Tick();
 23e:	01 d0       	rcall	.+2      	; 0x242 <Tick>
    }
 240:	fe cf       	rjmp	.-4      	; 0x23e <main+0x32>

00000242 <Tick>:
}

void Tick(){
 242:	cf 93       	push	r28
 244:	df 93       	push	r29
 246:	cd b7       	in	r28, 0x3d	; 61
 248:	de b7       	in	r29, 0x3e	; 62
    switch(state){
 24a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <state>
 24e:	88 2f       	mov	r24, r24
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	81 30       	cpi	r24, 0x01	; 1
 254:	91 05       	cpc	r25, r1
 256:	89 f0       	breq	.+34     	; 0x27a <Tick+0x38>
 258:	82 30       	cpi	r24, 0x02	; 2
 25a:	91 05       	cpc	r25, r1
 25c:	1c f4       	brge	.+6      	; 0x264 <Tick+0x22>
 25e:	89 2b       	or	r24, r25
 260:	41 f0       	breq	.+16     	; 0x272 <Tick+0x30>
        
        case Off:             
            state = Init;
            break;
        default:
            break;
 262:	ae c0       	rjmp	.+348    	; 0x3c0 <Tick+0x17e>
        Tick();
    }
}

void Tick(){
    switch(state){
 264:	82 30       	cpi	r24, 0x02	; 2
 266:	91 05       	cpc	r25, r1
 268:	b1 f1       	breq	.+108    	; 0x2d6 <Tick+0x94>
 26a:	03 97       	sbiw	r24, 0x03	; 3
 26c:	09 f4       	brne	.+2      	; 0x270 <Tick+0x2e>
 26e:	a3 c0       	rjmp	.+326    	; 0x3b6 <Tick+0x174>
        
        case Off:             
            state = Init;
            break;
        default:
            break;
 270:	a7 c0       	rjmp	.+334    	; 0x3c0 <Tick+0x17e>
}

void Tick(){
    switch(state){
        case Start:
            state = Init;
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
            break;
 278:	a3 c0       	rjmp	.+326    	; 0x3c0 <Tick+0x17e>
        case Init:
            if((PINA & 0x07) == 0x01){
 27a:	80 e2       	ldi	r24, 0x20	; 32
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	fc 01       	movw	r30, r24
 280:	80 81       	ld	r24, Z
 282:	88 2f       	mov	r24, r24
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	87 70       	andi	r24, 0x07	; 7
 288:	99 27       	eor	r25, r25
 28a:	01 97       	sbiw	r24, 0x01	; 1
 28c:	21 f4       	brne	.+8      	; 0x296 <Tick+0x54>
                state = On;
 28e:	82 e0       	ldi	r24, 0x02	; 2
 290:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
                state = On;
            }
            else{
                state = Init;
            }
            break;
 294:	95 c0       	rjmp	.+298    	; 0x3c0 <Tick+0x17e>
            break;
        case Init:
            if((PINA & 0x07) == 0x01){
                state = On;
            }
            else if((PINA & 0x07) == 0x02){
 296:	80 e2       	ldi	r24, 0x20	; 32
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	fc 01       	movw	r30, r24
 29c:	80 81       	ld	r24, Z
 29e:	88 2f       	mov	r24, r24
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	87 70       	andi	r24, 0x07	; 7
 2a4:	99 27       	eor	r25, r25
 2a6:	02 97       	sbiw	r24, 0x02	; 2
 2a8:	21 f4       	brne	.+8      	; 0x2b2 <Tick+0x70>
                state = On;
 2aa:	82 e0       	ldi	r24, 0x02	; 2
 2ac:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
                state = On;
            }
            else{
                state = Init;
            }
            break;
 2b0:	87 c0       	rjmp	.+270    	; 0x3c0 <Tick+0x17e>
                state = On;
            }
            else if((PINA & 0x07) == 0x02){
                state = On;
            }
            else if((PINA & 0x07) == 0x04){
 2b2:	80 e2       	ldi	r24, 0x20	; 32
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	fc 01       	movw	r30, r24
 2b8:	80 81       	ld	r24, Z
 2ba:	88 2f       	mov	r24, r24
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	87 70       	andi	r24, 0x07	; 7
 2c0:	99 27       	eor	r25, r25
 2c2:	04 97       	sbiw	r24, 0x04	; 4
 2c4:	21 f4       	brne	.+8      	; 0x2ce <Tick+0x8c>
                state = On;
 2c6:	82 e0       	ldi	r24, 0x02	; 2
 2c8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
            }
            else{
                state = Init;
            }
            break;
 2cc:	79 c0       	rjmp	.+242    	; 0x3c0 <Tick+0x17e>
            }
            else if((PINA & 0x07) == 0x04){
                state = On;
            }
            else{
                state = Init;
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
            }
            break;
 2d4:	75 c0       	rjmp	.+234    	; 0x3c0 <Tick+0x17e>
        case On:
            if((PINA & 0x07) == 0x01){
 2d6:	80 e2       	ldi	r24, 0x20	; 32
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	fc 01       	movw	r30, r24
 2dc:	80 81       	ld	r24, Z
 2de:	88 2f       	mov	r24, r24
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	87 70       	andi	r24, 0x07	; 7
 2e4:	99 27       	eor	r25, r25
 2e6:	01 97       	sbiw	r24, 0x01	; 1
 2e8:	21 f4       	brne	.+8      	; 0x2f2 <Tick+0xb0>
                state = On;
 2ea:	82 e0       	ldi	r24, 0x02	; 2
 2ec:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
                state = Off;
            }
            else if((PINA & 0x07) == 0x06){
                state = Off;
            }
            break;
 2f0:	66 c0       	rjmp	.+204    	; 0x3be <Tick+0x17c>
            break;
        case On:
            if((PINA & 0x07) == 0x01){
                state = On;
            }
            else if((PINA & 0x07) == 0x02){
 2f2:	80 e2       	ldi	r24, 0x20	; 32
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	fc 01       	movw	r30, r24
 2f8:	80 81       	ld	r24, Z
 2fa:	88 2f       	mov	r24, r24
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	87 70       	andi	r24, 0x07	; 7
 300:	99 27       	eor	r25, r25
 302:	02 97       	sbiw	r24, 0x02	; 2
 304:	21 f4       	brne	.+8      	; 0x30e <Tick+0xcc>
                state = On;
 306:	82 e0       	ldi	r24, 0x02	; 2
 308:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
                state = Off;
            }
            else if((PINA & 0x07) == 0x06){
                state = Off;
            }
            break;
 30c:	58 c0       	rjmp	.+176    	; 0x3be <Tick+0x17c>
                state = On;
            }
            else if((PINA & 0x07) == 0x02){
                state = On;
            }
            else if((PINA & 0x07) == 0x04){
 30e:	80 e2       	ldi	r24, 0x20	; 32
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	fc 01       	movw	r30, r24
 314:	80 81       	ld	r24, Z
 316:	88 2f       	mov	r24, r24
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	87 70       	andi	r24, 0x07	; 7
 31c:	99 27       	eor	r25, r25
 31e:	04 97       	sbiw	r24, 0x04	; 4
 320:	21 f4       	brne	.+8      	; 0x32a <Tick+0xe8>
                state = On;
 322:	82 e0       	ldi	r24, 0x02	; 2
 324:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
                state = Off;
            }
            else if((PINA & 0x07) == 0x06){
                state = Off;
            }
            break;
 328:	4a c0       	rjmp	.+148    	; 0x3be <Tick+0x17c>
                state = On;
            }
            else if((PINA & 0x07) == 0x04){
                state = On;
            }
            else if((PINA & 0x07) == 0x00){
 32a:	80 e2       	ldi	r24, 0x20	; 32
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	fc 01       	movw	r30, r24
 330:	80 81       	ld	r24, Z
 332:	88 2f       	mov	r24, r24
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	87 70       	andi	r24, 0x07	; 7
 338:	99 27       	eor	r25, r25
 33a:	89 2b       	or	r24, r25
 33c:	21 f4       	brne	.+8      	; 0x346 <Tick+0x104>
                state = Off;
 33e:	83 e0       	ldi	r24, 0x03	; 3
 340:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
                state = Off;
            }
            else if((PINA & 0x07) == 0x06){
                state = Off;
            }
            break;
 344:	3c c0       	rjmp	.+120    	; 0x3be <Tick+0x17c>
                state = On;
            }
            else if((PINA & 0x07) == 0x00){
                state = Off;
            }
            else if((PINA & 0x07) == 0x03){
 346:	80 e2       	ldi	r24, 0x20	; 32
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	fc 01       	movw	r30, r24
 34c:	80 81       	ld	r24, Z
 34e:	88 2f       	mov	r24, r24
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	87 70       	andi	r24, 0x07	; 7
 354:	99 27       	eor	r25, r25
 356:	03 97       	sbiw	r24, 0x03	; 3
 358:	21 f4       	brne	.+8      	; 0x362 <Tick+0x120>
                state = Off;
 35a:	83 e0       	ldi	r24, 0x03	; 3
 35c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
                state = Off;
            }
            else if((PINA & 0x07) == 0x06){
                state = Off;
            }
            break;
 360:	2e c0       	rjmp	.+92     	; 0x3be <Tick+0x17c>
                state = Off;
            }
            else if((PINA & 0x07) == 0x03){
                state = Off;
            }
            else if((PINA & 0x07) == 0x05){
 362:	80 e2       	ldi	r24, 0x20	; 32
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	fc 01       	movw	r30, r24
 368:	80 81       	ld	r24, Z
 36a:	88 2f       	mov	r24, r24
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	87 70       	andi	r24, 0x07	; 7
 370:	99 27       	eor	r25, r25
 372:	05 97       	sbiw	r24, 0x05	; 5
 374:	21 f4       	brne	.+8      	; 0x37e <Tick+0x13c>
                state = Off;
 376:	83 e0       	ldi	r24, 0x03	; 3
 378:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
                state = Off;
            }
            else if((PINA & 0x07) == 0x06){
                state = Off;
            }
            break;
 37c:	20 c0       	rjmp	.+64     	; 0x3be <Tick+0x17c>
                state = Off;
            }
            else if((PINA & 0x07) == 0x05){
                state = Off;
            }
            else if((PINA & 0x07) == 0x07){
 37e:	80 e2       	ldi	r24, 0x20	; 32
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	fc 01       	movw	r30, r24
 384:	80 81       	ld	r24, Z
 386:	88 2f       	mov	r24, r24
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	87 70       	andi	r24, 0x07	; 7
 38c:	99 27       	eor	r25, r25
 38e:	07 97       	sbiw	r24, 0x07	; 7
 390:	21 f4       	brne	.+8      	; 0x39a <Tick+0x158>
                state = Off;
 392:	83 e0       	ldi	r24, 0x03	; 3
 394:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
            }
            else if((PINA & 0x07) == 0x06){
                state = Off;
            }
            break;
 398:	12 c0       	rjmp	.+36     	; 0x3be <Tick+0x17c>
                state = Off;
            }
            else if((PINA & 0x07) == 0x07){
                state = Off;
            }
            else if((PINA & 0x07) == 0x06){
 39a:	80 e2       	ldi	r24, 0x20	; 32
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	fc 01       	movw	r30, r24
 3a0:	80 81       	ld	r24, Z
 3a2:	88 2f       	mov	r24, r24
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	87 70       	andi	r24, 0x07	; 7
 3a8:	99 27       	eor	r25, r25
 3aa:	06 97       	sbiw	r24, 0x06	; 6
 3ac:	41 f4       	brne	.+16     	; 0x3be <Tick+0x17c>
                state = Off;
 3ae:	83 e0       	ldi	r24, 0x03	; 3
 3b0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
            }
            break;
 3b4:	04 c0       	rjmp	.+8      	; 0x3be <Tick+0x17c>
        
        case Off:             
            state = Init;
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
            break;
 3bc:	01 c0       	rjmp	.+2      	; 0x3c0 <Tick+0x17e>
                state = Off;
            }
            else if((PINA & 0x07) == 0x06){
                state = Off;
            }
            break;
 3be:	00 00       	nop
            break;
        default:
            break;
       
    }
    switch(state){
 3c0:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <state>
 3c4:	88 2f       	mov	r24, r24
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	81 30       	cpi	r24, 0x01	; 1
 3ca:	91 05       	cpc	r25, r1
 3cc:	69 f0       	breq	.+26     	; 0x3e8 <Tick+0x1a6>
 3ce:	82 30       	cpi	r24, 0x02	; 2
 3d0:	91 05       	cpc	r25, r1
 3d2:	24 f4       	brge	.+8      	; 0x3dc <Tick+0x19a>
 3d4:	89 2b       	or	r24, r25
 3d6:	09 f4       	brne	.+2      	; 0x3da <Tick+0x198>
 3d8:	41 c0       	rjmp	.+130    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
            break;
        case Off:
            set_PWM(0);
            break;
        default:
            break;
 3da:	43 c0       	rjmp	.+134    	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
            break;
        default:
            break;
       
    }
    switch(state){
 3dc:	82 30       	cpi	r24, 0x02	; 2
 3de:	91 05       	cpc	r25, r1
 3e0:	41 f0       	breq	.+16     	; 0x3f2 <Tick+0x1b0>
 3e2:	03 97       	sbiw	r24, 0x03	; 3
 3e4:	b1 f1       	breq	.+108    	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
            break;
        case Off:
            set_PWM(0);
            break;
        default:
            break;
 3e6:	3d c0       	rjmp	.+122    	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
    }
    switch(state){
        case Start:
            break;
        case Init:
            set_PWM(0);
 3e8:	60 e0       	ldi	r22, 0x00	; 0
 3ea:	70 e0       	ldi	r23, 0x00	; 0
 3ec:	cb 01       	movw	r24, r22
 3ee:	5f de       	rcall	.-834    	; 0xae <set_PWM>
            break;
 3f0:	38 c0       	rjmp	.+112    	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
        case On:
            if((PINA & 0x07) == 0x01){
 3f2:	80 e2       	ldi	r24, 0x20	; 32
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	fc 01       	movw	r30, r24
 3f8:	80 81       	ld	r24, Z
 3fa:	88 2f       	mov	r24, r24
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	87 70       	andi	r24, 0x07	; 7
 400:	99 27       	eor	r25, r25
 402:	01 97       	sbiw	r24, 0x01	; 1
 404:	31 f4       	brne	.+12     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
                set_PWM(261.33);
 406:	6d e3       	ldi	r22, 0x3D	; 61
 408:	7a ea       	ldi	r23, 0xAA	; 170
 40a:	82 e8       	ldi	r24, 0x82	; 130
 40c:	93 e4       	ldi	r25, 0x43	; 67
 40e:	4f de       	rcall	.-866    	; 0xae <set_PWM>
                set_PWM(293.66);
            }
            else if((PINA & 0x07) == 0x04){
                set_PWM(329.63);
            }
            break;
 410:	27 c0       	rjmp	.+78     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
            break;
        case On:
            if((PINA & 0x07) == 0x01){
                set_PWM(261.33);
            }
            else if((PINA & 0x07) == 0x02){
 412:	80 e2       	ldi	r24, 0x20	; 32
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	fc 01       	movw	r30, r24
 418:	80 81       	ld	r24, Z
 41a:	88 2f       	mov	r24, r24
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	87 70       	andi	r24, 0x07	; 7
 420:	99 27       	eor	r25, r25
 422:	02 97       	sbiw	r24, 0x02	; 2
 424:	31 f4       	brne	.+12     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
                set_PWM(293.66);
 426:	6b e7       	ldi	r22, 0x7B	; 123
 428:	74 ed       	ldi	r23, 0xD4	; 212
 42a:	82 e9       	ldi	r24, 0x92	; 146
 42c:	93 e4       	ldi	r25, 0x43	; 67
 42e:	3f de       	rcall	.-898    	; 0xae <set_PWM>
            }
            else if((PINA & 0x07) == 0x04){
                set_PWM(329.63);
            }
            break;
 430:	17 c0       	rjmp	.+46     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
                set_PWM(261.33);
            }
            else if((PINA & 0x07) == 0x02){
                set_PWM(293.66);
            }
            else if((PINA & 0x07) == 0x04){
 432:	80 e2       	ldi	r24, 0x20	; 32
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	fc 01       	movw	r30, r24
 438:	80 81       	ld	r24, Z
 43a:	88 2f       	mov	r24, r24
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	87 70       	andi	r24, 0x07	; 7
 440:	99 27       	eor	r25, r25
 442:	04 97       	sbiw	r24, 0x04	; 4
 444:	69 f4       	brne	.+26     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
                set_PWM(329.63);
 446:	64 ea       	ldi	r22, 0xA4	; 164
 448:	70 ed       	ldi	r23, 0xD0	; 208
 44a:	84 ea       	ldi	r24, 0xA4	; 164
 44c:	93 e4       	ldi	r25, 0x43	; 67
 44e:	2f de       	rcall	.-930    	; 0xae <set_PWM>
            }
            break;
        case Off:
            set_PWM(0);
 450:	07 c0       	rjmp	.+14     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 452:	60 e0       	ldi	r22, 0x00	; 0
 454:	70 e0       	ldi	r23, 0x00	; 0
 456:	cb 01       	movw	r24, r22
 458:	2a de       	rcall	.-940    	; 0xae <set_PWM>
            break;
 45a:	03 c0       	rjmp	.+6      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
            break;
       
    }
    switch(state){
        case Start:
            break;
 45c:	00 00       	nop
 45e:	01 c0       	rjmp	.+2      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
                set_PWM(293.66);
            }
            else if((PINA & 0x07) == 0x04){
                set_PWM(329.63);
            }
            break;
 460:	00 00       	nop
            break;
        
    }
    
    
}
 462:	00 00       	nop
 464:	df 91       	pop	r29
 466:	cf 91       	pop	r28
 468:	08 95       	ret

0000046a <__cmpsf2>:
 46a:	9c d0       	rcall	.+312    	; 0x5a4 <__fp_cmp>
 46c:	08 f4       	brcc	.+2      	; 0x470 <__cmpsf2+0x6>
 46e:	81 e0       	ldi	r24, 0x01	; 1
 470:	08 95       	ret

00000472 <__divsf3>:
 472:	0c d0       	rcall	.+24     	; 0x48c <__divsf3x>
 474:	d2 c0       	rjmp	.+420    	; 0x61a <__fp_round>
 476:	ca d0       	rcall	.+404    	; 0x60c <__fp_pscB>
 478:	40 f0       	brcs	.+16     	; 0x48a <__divsf3+0x18>
 47a:	c1 d0       	rcall	.+386    	; 0x5fe <__fp_pscA>
 47c:	30 f0       	brcs	.+12     	; 0x48a <__divsf3+0x18>
 47e:	21 f4       	brne	.+8      	; 0x488 <__divsf3+0x16>
 480:	5f 3f       	cpi	r21, 0xFF	; 255
 482:	19 f0       	breq	.+6      	; 0x48a <__divsf3+0x18>
 484:	b3 c0       	rjmp	.+358    	; 0x5ec <__fp_inf>
 486:	51 11       	cpse	r21, r1
 488:	fc c0       	rjmp	.+504    	; 0x682 <__fp_szero>
 48a:	b6 c0       	rjmp	.+364    	; 0x5f8 <__fp_nan>

0000048c <__divsf3x>:
 48c:	d7 d0       	rcall	.+430    	; 0x63c <__fp_split3>
 48e:	98 f3       	brcs	.-26     	; 0x476 <__divsf3+0x4>

00000490 <__divsf3_pse>:
 490:	99 23       	and	r25, r25
 492:	c9 f3       	breq	.-14     	; 0x486 <__divsf3+0x14>
 494:	55 23       	and	r21, r21
 496:	b1 f3       	breq	.-20     	; 0x484 <__divsf3+0x12>
 498:	95 1b       	sub	r25, r21
 49a:	55 0b       	sbc	r21, r21
 49c:	bb 27       	eor	r27, r27
 49e:	aa 27       	eor	r26, r26
 4a0:	62 17       	cp	r22, r18
 4a2:	73 07       	cpc	r23, r19
 4a4:	84 07       	cpc	r24, r20
 4a6:	38 f0       	brcs	.+14     	; 0x4b6 <__divsf3_pse+0x26>
 4a8:	9f 5f       	subi	r25, 0xFF	; 255
 4aa:	5f 4f       	sbci	r21, 0xFF	; 255
 4ac:	22 0f       	add	r18, r18
 4ae:	33 1f       	adc	r19, r19
 4b0:	44 1f       	adc	r20, r20
 4b2:	aa 1f       	adc	r26, r26
 4b4:	a9 f3       	breq	.-22     	; 0x4a0 <__divsf3_pse+0x10>
 4b6:	33 d0       	rcall	.+102    	; 0x51e <__divsf3_pse+0x8e>
 4b8:	0e 2e       	mov	r0, r30
 4ba:	3a f0       	brmi	.+14     	; 0x4ca <__divsf3_pse+0x3a>
 4bc:	e0 e8       	ldi	r30, 0x80	; 128
 4be:	30 d0       	rcall	.+96     	; 0x520 <__divsf3_pse+0x90>
 4c0:	91 50       	subi	r25, 0x01	; 1
 4c2:	50 40       	sbci	r21, 0x00	; 0
 4c4:	e6 95       	lsr	r30
 4c6:	00 1c       	adc	r0, r0
 4c8:	ca f7       	brpl	.-14     	; 0x4bc <__divsf3_pse+0x2c>
 4ca:	29 d0       	rcall	.+82     	; 0x51e <__divsf3_pse+0x8e>
 4cc:	fe 2f       	mov	r31, r30
 4ce:	27 d0       	rcall	.+78     	; 0x51e <__divsf3_pse+0x8e>
 4d0:	66 0f       	add	r22, r22
 4d2:	77 1f       	adc	r23, r23
 4d4:	88 1f       	adc	r24, r24
 4d6:	bb 1f       	adc	r27, r27
 4d8:	26 17       	cp	r18, r22
 4da:	37 07       	cpc	r19, r23
 4dc:	48 07       	cpc	r20, r24
 4de:	ab 07       	cpc	r26, r27
 4e0:	b0 e8       	ldi	r27, 0x80	; 128
 4e2:	09 f0       	breq	.+2      	; 0x4e6 <__divsf3_pse+0x56>
 4e4:	bb 0b       	sbc	r27, r27
 4e6:	80 2d       	mov	r24, r0
 4e8:	bf 01       	movw	r22, r30
 4ea:	ff 27       	eor	r31, r31
 4ec:	93 58       	subi	r25, 0x83	; 131
 4ee:	5f 4f       	sbci	r21, 0xFF	; 255
 4f0:	2a f0       	brmi	.+10     	; 0x4fc <__divsf3_pse+0x6c>
 4f2:	9e 3f       	cpi	r25, 0xFE	; 254
 4f4:	51 05       	cpc	r21, r1
 4f6:	68 f0       	brcs	.+26     	; 0x512 <__divsf3_pse+0x82>
 4f8:	79 c0       	rjmp	.+242    	; 0x5ec <__fp_inf>
 4fa:	c3 c0       	rjmp	.+390    	; 0x682 <__fp_szero>
 4fc:	5f 3f       	cpi	r21, 0xFF	; 255
 4fe:	ec f3       	brlt	.-6      	; 0x4fa <__divsf3_pse+0x6a>
 500:	98 3e       	cpi	r25, 0xE8	; 232
 502:	dc f3       	brlt	.-10     	; 0x4fa <__divsf3_pse+0x6a>
 504:	86 95       	lsr	r24
 506:	77 95       	ror	r23
 508:	67 95       	ror	r22
 50a:	b7 95       	ror	r27
 50c:	f7 95       	ror	r31
 50e:	9f 5f       	subi	r25, 0xFF	; 255
 510:	c9 f7       	brne	.-14     	; 0x504 <__divsf3_pse+0x74>
 512:	88 0f       	add	r24, r24
 514:	91 1d       	adc	r25, r1
 516:	96 95       	lsr	r25
 518:	87 95       	ror	r24
 51a:	97 f9       	bld	r25, 7
 51c:	08 95       	ret
 51e:	e1 e0       	ldi	r30, 0x01	; 1
 520:	66 0f       	add	r22, r22
 522:	77 1f       	adc	r23, r23
 524:	88 1f       	adc	r24, r24
 526:	bb 1f       	adc	r27, r27
 528:	62 17       	cp	r22, r18
 52a:	73 07       	cpc	r23, r19
 52c:	84 07       	cpc	r24, r20
 52e:	ba 07       	cpc	r27, r26
 530:	20 f0       	brcs	.+8      	; 0x53a <__divsf3_pse+0xaa>
 532:	62 1b       	sub	r22, r18
 534:	73 0b       	sbc	r23, r19
 536:	84 0b       	sbc	r24, r20
 538:	ba 0b       	sbc	r27, r26
 53a:	ee 1f       	adc	r30, r30
 53c:	88 f7       	brcc	.-30     	; 0x520 <__divsf3_pse+0x90>
 53e:	e0 95       	com	r30
 540:	08 95       	ret

00000542 <__fixsfsi>:
 542:	04 d0       	rcall	.+8      	; 0x54c <__fixunssfsi>
 544:	68 94       	set
 546:	b1 11       	cpse	r27, r1
 548:	9c c0       	rjmp	.+312    	; 0x682 <__fp_szero>
 54a:	08 95       	ret

0000054c <__fixunssfsi>:
 54c:	7f d0       	rcall	.+254    	; 0x64c <__fp_splitA>
 54e:	88 f0       	brcs	.+34     	; 0x572 <__fixunssfsi+0x26>
 550:	9f 57       	subi	r25, 0x7F	; 127
 552:	90 f0       	brcs	.+36     	; 0x578 <__fixunssfsi+0x2c>
 554:	b9 2f       	mov	r27, r25
 556:	99 27       	eor	r25, r25
 558:	b7 51       	subi	r27, 0x17	; 23
 55a:	a0 f0       	brcs	.+40     	; 0x584 <__fixunssfsi+0x38>
 55c:	d1 f0       	breq	.+52     	; 0x592 <__fixunssfsi+0x46>
 55e:	66 0f       	add	r22, r22
 560:	77 1f       	adc	r23, r23
 562:	88 1f       	adc	r24, r24
 564:	99 1f       	adc	r25, r25
 566:	1a f0       	brmi	.+6      	; 0x56e <__fixunssfsi+0x22>
 568:	ba 95       	dec	r27
 56a:	c9 f7       	brne	.-14     	; 0x55e <__fixunssfsi+0x12>
 56c:	12 c0       	rjmp	.+36     	; 0x592 <__fixunssfsi+0x46>
 56e:	b1 30       	cpi	r27, 0x01	; 1
 570:	81 f0       	breq	.+32     	; 0x592 <__fixunssfsi+0x46>
 572:	86 d0       	rcall	.+268    	; 0x680 <__fp_zero>
 574:	b1 e0       	ldi	r27, 0x01	; 1
 576:	08 95       	ret
 578:	83 c0       	rjmp	.+262    	; 0x680 <__fp_zero>
 57a:	67 2f       	mov	r22, r23
 57c:	78 2f       	mov	r23, r24
 57e:	88 27       	eor	r24, r24
 580:	b8 5f       	subi	r27, 0xF8	; 248
 582:	39 f0       	breq	.+14     	; 0x592 <__fixunssfsi+0x46>
 584:	b9 3f       	cpi	r27, 0xF9	; 249
 586:	cc f3       	brlt	.-14     	; 0x57a <__fixunssfsi+0x2e>
 588:	86 95       	lsr	r24
 58a:	77 95       	ror	r23
 58c:	67 95       	ror	r22
 58e:	b3 95       	inc	r27
 590:	d9 f7       	brne	.-10     	; 0x588 <__fixunssfsi+0x3c>
 592:	3e f4       	brtc	.+14     	; 0x5a2 <__fixunssfsi+0x56>
 594:	90 95       	com	r25
 596:	80 95       	com	r24
 598:	70 95       	com	r23
 59a:	61 95       	neg	r22
 59c:	7f 4f       	sbci	r23, 0xFF	; 255
 59e:	8f 4f       	sbci	r24, 0xFF	; 255
 5a0:	9f 4f       	sbci	r25, 0xFF	; 255
 5a2:	08 95       	ret

000005a4 <__fp_cmp>:
 5a4:	99 0f       	add	r25, r25
 5a6:	00 08       	sbc	r0, r0
 5a8:	55 0f       	add	r21, r21
 5aa:	aa 0b       	sbc	r26, r26
 5ac:	e0 e8       	ldi	r30, 0x80	; 128
 5ae:	fe ef       	ldi	r31, 0xFE	; 254
 5b0:	16 16       	cp	r1, r22
 5b2:	17 06       	cpc	r1, r23
 5b4:	e8 07       	cpc	r30, r24
 5b6:	f9 07       	cpc	r31, r25
 5b8:	c0 f0       	brcs	.+48     	; 0x5ea <__fp_cmp+0x46>
 5ba:	12 16       	cp	r1, r18
 5bc:	13 06       	cpc	r1, r19
 5be:	e4 07       	cpc	r30, r20
 5c0:	f5 07       	cpc	r31, r21
 5c2:	98 f0       	brcs	.+38     	; 0x5ea <__fp_cmp+0x46>
 5c4:	62 1b       	sub	r22, r18
 5c6:	73 0b       	sbc	r23, r19
 5c8:	84 0b       	sbc	r24, r20
 5ca:	95 0b       	sbc	r25, r21
 5cc:	39 f4       	brne	.+14     	; 0x5dc <__fp_cmp+0x38>
 5ce:	0a 26       	eor	r0, r26
 5d0:	61 f0       	breq	.+24     	; 0x5ea <__fp_cmp+0x46>
 5d2:	23 2b       	or	r18, r19
 5d4:	24 2b       	or	r18, r20
 5d6:	25 2b       	or	r18, r21
 5d8:	21 f4       	brne	.+8      	; 0x5e2 <__fp_cmp+0x3e>
 5da:	08 95       	ret
 5dc:	0a 26       	eor	r0, r26
 5de:	09 f4       	brne	.+2      	; 0x5e2 <__fp_cmp+0x3e>
 5e0:	a1 40       	sbci	r26, 0x01	; 1
 5e2:	a6 95       	lsr	r26
 5e4:	8f ef       	ldi	r24, 0xFF	; 255
 5e6:	81 1d       	adc	r24, r1
 5e8:	81 1d       	adc	r24, r1
 5ea:	08 95       	ret

000005ec <__fp_inf>:
 5ec:	97 f9       	bld	r25, 7
 5ee:	9f 67       	ori	r25, 0x7F	; 127
 5f0:	80 e8       	ldi	r24, 0x80	; 128
 5f2:	70 e0       	ldi	r23, 0x00	; 0
 5f4:	60 e0       	ldi	r22, 0x00	; 0
 5f6:	08 95       	ret

000005f8 <__fp_nan>:
 5f8:	9f ef       	ldi	r25, 0xFF	; 255
 5fa:	80 ec       	ldi	r24, 0xC0	; 192
 5fc:	08 95       	ret

000005fe <__fp_pscA>:
 5fe:	00 24       	eor	r0, r0
 600:	0a 94       	dec	r0
 602:	16 16       	cp	r1, r22
 604:	17 06       	cpc	r1, r23
 606:	18 06       	cpc	r1, r24
 608:	09 06       	cpc	r0, r25
 60a:	08 95       	ret

0000060c <__fp_pscB>:
 60c:	00 24       	eor	r0, r0
 60e:	0a 94       	dec	r0
 610:	12 16       	cp	r1, r18
 612:	13 06       	cpc	r1, r19
 614:	14 06       	cpc	r1, r20
 616:	05 06       	cpc	r0, r21
 618:	08 95       	ret

0000061a <__fp_round>:
 61a:	09 2e       	mov	r0, r25
 61c:	03 94       	inc	r0
 61e:	00 0c       	add	r0, r0
 620:	11 f4       	brne	.+4      	; 0x626 <__fp_round+0xc>
 622:	88 23       	and	r24, r24
 624:	52 f0       	brmi	.+20     	; 0x63a <__fp_round+0x20>
 626:	bb 0f       	add	r27, r27
 628:	40 f4       	brcc	.+16     	; 0x63a <__fp_round+0x20>
 62a:	bf 2b       	or	r27, r31
 62c:	11 f4       	brne	.+4      	; 0x632 <__fp_round+0x18>
 62e:	60 ff       	sbrs	r22, 0
 630:	04 c0       	rjmp	.+8      	; 0x63a <__fp_round+0x20>
 632:	6f 5f       	subi	r22, 0xFF	; 255
 634:	7f 4f       	sbci	r23, 0xFF	; 255
 636:	8f 4f       	sbci	r24, 0xFF	; 255
 638:	9f 4f       	sbci	r25, 0xFF	; 255
 63a:	08 95       	ret

0000063c <__fp_split3>:
 63c:	57 fd       	sbrc	r21, 7
 63e:	90 58       	subi	r25, 0x80	; 128
 640:	44 0f       	add	r20, r20
 642:	55 1f       	adc	r21, r21
 644:	59 f0       	breq	.+22     	; 0x65c <__fp_splitA+0x10>
 646:	5f 3f       	cpi	r21, 0xFF	; 255
 648:	71 f0       	breq	.+28     	; 0x666 <__fp_splitA+0x1a>
 64a:	47 95       	ror	r20

0000064c <__fp_splitA>:
 64c:	88 0f       	add	r24, r24
 64e:	97 fb       	bst	r25, 7
 650:	99 1f       	adc	r25, r25
 652:	61 f0       	breq	.+24     	; 0x66c <__fp_splitA+0x20>
 654:	9f 3f       	cpi	r25, 0xFF	; 255
 656:	79 f0       	breq	.+30     	; 0x676 <__fp_splitA+0x2a>
 658:	87 95       	ror	r24
 65a:	08 95       	ret
 65c:	12 16       	cp	r1, r18
 65e:	13 06       	cpc	r1, r19
 660:	14 06       	cpc	r1, r20
 662:	55 1f       	adc	r21, r21
 664:	f2 cf       	rjmp	.-28     	; 0x64a <__fp_split3+0xe>
 666:	46 95       	lsr	r20
 668:	f1 df       	rcall	.-30     	; 0x64c <__fp_splitA>
 66a:	08 c0       	rjmp	.+16     	; 0x67c <__fp_splitA+0x30>
 66c:	16 16       	cp	r1, r22
 66e:	17 06       	cpc	r1, r23
 670:	18 06       	cpc	r1, r24
 672:	99 1f       	adc	r25, r25
 674:	f1 cf       	rjmp	.-30     	; 0x658 <__fp_splitA+0xc>
 676:	86 95       	lsr	r24
 678:	71 05       	cpc	r23, r1
 67a:	61 05       	cpc	r22, r1
 67c:	08 94       	sec
 67e:	08 95       	ret

00000680 <__fp_zero>:
 680:	e8 94       	clt

00000682 <__fp_szero>:
 682:	bb 27       	eor	r27, r27
 684:	66 27       	eor	r22, r22
 686:	77 27       	eor	r23, r23
 688:	cb 01       	movw	r24, r22
 68a:	97 f9       	bld	r25, 7
 68c:	08 95       	ret

0000068e <__gesf2>:
 68e:	8a df       	rcall	.-236    	; 0x5a4 <__fp_cmp>
 690:	08 f4       	brcc	.+2      	; 0x694 <__gesf2+0x6>
 692:	8f ef       	ldi	r24, 0xFF	; 255
 694:	08 95       	ret

00000696 <__mulsf3>:
 696:	0b d0       	rcall	.+22     	; 0x6ae <__mulsf3x>
 698:	c0 cf       	rjmp	.-128    	; 0x61a <__fp_round>
 69a:	b1 df       	rcall	.-158    	; 0x5fe <__fp_pscA>
 69c:	28 f0       	brcs	.+10     	; 0x6a8 <__mulsf3+0x12>
 69e:	b6 df       	rcall	.-148    	; 0x60c <__fp_pscB>
 6a0:	18 f0       	brcs	.+6      	; 0x6a8 <__mulsf3+0x12>
 6a2:	95 23       	and	r25, r21
 6a4:	09 f0       	breq	.+2      	; 0x6a8 <__mulsf3+0x12>
 6a6:	a2 cf       	rjmp	.-188    	; 0x5ec <__fp_inf>
 6a8:	a7 cf       	rjmp	.-178    	; 0x5f8 <__fp_nan>
 6aa:	11 24       	eor	r1, r1
 6ac:	ea cf       	rjmp	.-44     	; 0x682 <__fp_szero>

000006ae <__mulsf3x>:
 6ae:	c6 df       	rcall	.-116    	; 0x63c <__fp_split3>
 6b0:	a0 f3       	brcs	.-24     	; 0x69a <__mulsf3+0x4>

000006b2 <__mulsf3_pse>:
 6b2:	95 9f       	mul	r25, r21
 6b4:	d1 f3       	breq	.-12     	; 0x6aa <__mulsf3+0x14>
 6b6:	95 0f       	add	r25, r21
 6b8:	50 e0       	ldi	r21, 0x00	; 0
 6ba:	55 1f       	adc	r21, r21
 6bc:	62 9f       	mul	r22, r18
 6be:	f0 01       	movw	r30, r0
 6c0:	72 9f       	mul	r23, r18
 6c2:	bb 27       	eor	r27, r27
 6c4:	f0 0d       	add	r31, r0
 6c6:	b1 1d       	adc	r27, r1
 6c8:	63 9f       	mul	r22, r19
 6ca:	aa 27       	eor	r26, r26
 6cc:	f0 0d       	add	r31, r0
 6ce:	b1 1d       	adc	r27, r1
 6d0:	aa 1f       	adc	r26, r26
 6d2:	64 9f       	mul	r22, r20
 6d4:	66 27       	eor	r22, r22
 6d6:	b0 0d       	add	r27, r0
 6d8:	a1 1d       	adc	r26, r1
 6da:	66 1f       	adc	r22, r22
 6dc:	82 9f       	mul	r24, r18
 6de:	22 27       	eor	r18, r18
 6e0:	b0 0d       	add	r27, r0
 6e2:	a1 1d       	adc	r26, r1
 6e4:	62 1f       	adc	r22, r18
 6e6:	73 9f       	mul	r23, r19
 6e8:	b0 0d       	add	r27, r0
 6ea:	a1 1d       	adc	r26, r1
 6ec:	62 1f       	adc	r22, r18
 6ee:	83 9f       	mul	r24, r19
 6f0:	a0 0d       	add	r26, r0
 6f2:	61 1d       	adc	r22, r1
 6f4:	22 1f       	adc	r18, r18
 6f6:	74 9f       	mul	r23, r20
 6f8:	33 27       	eor	r19, r19
 6fa:	a0 0d       	add	r26, r0
 6fc:	61 1d       	adc	r22, r1
 6fe:	23 1f       	adc	r18, r19
 700:	84 9f       	mul	r24, r20
 702:	60 0d       	add	r22, r0
 704:	21 1d       	adc	r18, r1
 706:	82 2f       	mov	r24, r18
 708:	76 2f       	mov	r23, r22
 70a:	6a 2f       	mov	r22, r26
 70c:	11 24       	eor	r1, r1
 70e:	9f 57       	subi	r25, 0x7F	; 127
 710:	50 40       	sbci	r21, 0x00	; 0
 712:	8a f0       	brmi	.+34     	; 0x736 <__mulsf3_pse+0x84>
 714:	e1 f0       	breq	.+56     	; 0x74e <__mulsf3_pse+0x9c>
 716:	88 23       	and	r24, r24
 718:	4a f0       	brmi	.+18     	; 0x72c <__mulsf3_pse+0x7a>
 71a:	ee 0f       	add	r30, r30
 71c:	ff 1f       	adc	r31, r31
 71e:	bb 1f       	adc	r27, r27
 720:	66 1f       	adc	r22, r22
 722:	77 1f       	adc	r23, r23
 724:	88 1f       	adc	r24, r24
 726:	91 50       	subi	r25, 0x01	; 1
 728:	50 40       	sbci	r21, 0x00	; 0
 72a:	a9 f7       	brne	.-22     	; 0x716 <__mulsf3_pse+0x64>
 72c:	9e 3f       	cpi	r25, 0xFE	; 254
 72e:	51 05       	cpc	r21, r1
 730:	70 f0       	brcs	.+28     	; 0x74e <__mulsf3_pse+0x9c>
 732:	5c cf       	rjmp	.-328    	; 0x5ec <__fp_inf>
 734:	a6 cf       	rjmp	.-180    	; 0x682 <__fp_szero>
 736:	5f 3f       	cpi	r21, 0xFF	; 255
 738:	ec f3       	brlt	.-6      	; 0x734 <__mulsf3_pse+0x82>
 73a:	98 3e       	cpi	r25, 0xE8	; 232
 73c:	dc f3       	brlt	.-10     	; 0x734 <__mulsf3_pse+0x82>
 73e:	86 95       	lsr	r24
 740:	77 95       	ror	r23
 742:	67 95       	ror	r22
 744:	b7 95       	ror	r27
 746:	f7 95       	ror	r31
 748:	e7 95       	ror	r30
 74a:	9f 5f       	subi	r25, 0xFF	; 255
 74c:	c1 f7       	brne	.-16     	; 0x73e <__mulsf3_pse+0x8c>
 74e:	fe 2b       	or	r31, r30
 750:	88 0f       	add	r24, r24
 752:	91 1d       	adc	r25, r1
 754:	96 95       	lsr	r25
 756:	87 95       	ror	r24
 758:	97 f9       	bld	r25, 7
 75a:	08 95       	ret

0000075c <_exit>:
 75c:	f8 94       	cli

0000075e <__stop_program>:
 75e:	ff cf       	rjmp	.-2      	; 0x75e <__stop_program>
