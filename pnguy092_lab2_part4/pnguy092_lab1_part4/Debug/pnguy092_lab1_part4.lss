
pnguy092_lab1_part4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000196  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001ea  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000021c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000880  00000000  00000000  0000027c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000079c  00000000  00000000  00000afc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000028e  00000000  00000000  00001298  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001528  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000424  00000000  00000000  0000155c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000047  00000000  00000000  00001980  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000019c7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	7b c0       	rjmp	.+246    	; 0x192 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
#include <stdio.h>
#include <stdlib.h>


int main(void)
{
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	cd b7       	in	r28, 0x3d	; 61
  a4:	de b7       	in	r29, 0x3e	; 62
  a6:	27 97       	sbiw	r28, 0x07	; 7
  a8:	0f b6       	in	r0, 0x3f	; 63
  aa:	f8 94       	cli
  ac:	de bf       	out	0x3e, r29	; 62
  ae:	0f be       	out	0x3f, r0	; 63
  b0:	cd bf       	out	0x3d, r28	; 61
    /* Replace with your application code */
	DDRA = 0x00; PORTA = 0xFF;
  b2:	81 e2       	ldi	r24, 0x21	; 33
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	fc 01       	movw	r30, r24
  b8:	10 82       	st	Z, r1
  ba:	82 e2       	ldi	r24, 0x22	; 34
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	fc 01       	movw	r30, r24
  c2:	20 83       	st	Z, r18
	DDRB = 0x00; PORTB = 0xFF;
  c4:	84 e2       	ldi	r24, 0x24	; 36
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	fc 01       	movw	r30, r24
  ca:	10 82       	st	Z, r1
  cc:	85 e2       	ldi	r24, 0x25	; 37
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	2f ef       	ldi	r18, 0xFF	; 255
  d2:	fc 01       	movw	r30, r24
  d4:	20 83       	st	Z, r18
	DDRC = 0x00; PORTC = 0xFF;
  d6:	87 e2       	ldi	r24, 0x27	; 39
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	fc 01       	movw	r30, r24
  dc:	10 82       	st	Z, r1
  de:	88 e2       	ldi	r24, 0x28	; 40
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	2f ef       	ldi	r18, 0xFF	; 255
  e4:	fc 01       	movw	r30, r24
  e6:	20 83       	st	Z, r18
	DDRD = 0xFF; PORTD = 0x00;
  e8:	8a e2       	ldi	r24, 0x2A	; 42
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	2f ef       	ldi	r18, 0xFF	; 255
  ee:	fc 01       	movw	r30, r24
  f0:	20 83       	st	Z, r18
  f2:	8b e2       	ldi	r24, 0x2B	; 43
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	fc 01       	movw	r30, r24
  f8:	10 82       	st	Z, r1
	
	unsigned char tempA = 0x00;
  fa:	1b 82       	std	Y+3, r1	; 0x03
	unsigned char tempB = 0x00;
  fc:	1c 82       	std	Y+4, r1	; 0x04
	unsigned char tempC = 0x00;
  fe:	1d 82       	std	Y+5, r1	; 0x05
	
	unsigned char pd0 = 0x00;
 100:	19 82       	std	Y+1, r1	; 0x01
	unsigned char pd1 = 0x00;
 102:	1a 82       	std	Y+2, r1	; 0x02
	unsigned short total_weight = 0x00;
 104:	1f 82       	std	Y+7, r1	; 0x07
 106:	1e 82       	std	Y+6, r1	; 0x06
	
    while (1) 
    {
		pd0 = 0x00;
 108:	19 82       	std	Y+1, r1	; 0x01
		pd1 = 0x00;
 10a:	1a 82       	std	Y+2, r1	; 0x02
		total_weight = 0x00;
 10c:	1f 82       	std	Y+7, r1	; 0x07
 10e:	1e 82       	std	Y+6, r1	; 0x06
		
		//temp variables hold value of PIN's A-C
		tempA = PINA;
 110:	80 e2       	ldi	r24, 0x20	; 32
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	fc 01       	movw	r30, r24
 116:	80 81       	ld	r24, Z
 118:	8b 83       	std	Y+3, r24	; 0x03
		tempB = PINB;
 11a:	83 e2       	ldi	r24, 0x23	; 35
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	fc 01       	movw	r30, r24
 120:	80 81       	ld	r24, Z
 122:	8c 83       	std	Y+4, r24	; 0x04
		tempC = PINC;
 124:	86 e2       	ldi	r24, 0x26	; 38
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	fc 01       	movw	r30, r24
 12a:	80 81       	ld	r24, Z
 12c:	8d 83       	std	Y+5, r24	; 0x05
		
		total_weight = tempA + tempB + tempC;
 12e:	8b 81       	ldd	r24, Y+3	; 0x03
 130:	28 2f       	mov	r18, r24
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	8c 81       	ldd	r24, Y+4	; 0x04
 136:	88 2f       	mov	r24, r24
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	28 0f       	add	r18, r24
 13c:	39 1f       	adc	r19, r25
 13e:	8d 81       	ldd	r24, Y+5	; 0x05
 140:	88 2f       	mov	r24, r24
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	82 0f       	add	r24, r18
 146:	93 1f       	adc	r25, r19
 148:	9f 83       	std	Y+7, r25	; 0x07
 14a:	8e 83       	std	Y+6, r24	; 0x06
		if(total_weight > 0x8C){
 14c:	8e 81       	ldd	r24, Y+6	; 0x06
 14e:	9f 81       	ldd	r25, Y+7	; 0x07
 150:	8d 38       	cpi	r24, 0x8D	; 141
 152:	91 05       	cpc	r25, r1
 154:	10 f0       	brcs	.+4      	; 0x15a <main+0xbc>
			pd0 = 0x01;
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	89 83       	std	Y+1, r24	; 0x01
		}
		if(abs(tempA - tempC) > 0x50){
 15a:	8b 81       	ldd	r24, Y+3	; 0x03
 15c:	28 2f       	mov	r18, r24
 15e:	30 e0       	ldi	r19, 0x00	; 0
 160:	8d 81       	ldd	r24, Y+5	; 0x05
 162:	88 2f       	mov	r24, r24
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	a9 01       	movw	r20, r18
 168:	48 1b       	sub	r20, r24
 16a:	59 0b       	sbc	r21, r25
 16c:	ca 01       	movw	r24, r20
 16e:	99 23       	and	r25, r25
 170:	1c f4       	brge	.+6      	; 0x178 <main+0xda>
 172:	91 95       	neg	r25
 174:	81 95       	neg	r24
 176:	91 09       	sbc	r25, r1
 178:	81 35       	cpi	r24, 0x51	; 81
 17a:	91 05       	cpc	r25, r1
 17c:	14 f0       	brlt	.+4      	; 0x182 <main+0xe4>
			pd1 = 0x02;
 17e:	82 e0       	ldi	r24, 0x02	; 2
 180:	8a 83       	std	Y+2, r24	; 0x02
		}
		
		
		
		PORTD = pd0 | pd1;
 182:	8b e2       	ldi	r24, 0x2B	; 43
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	39 81       	ldd	r19, Y+1	; 0x01
 188:	2a 81       	ldd	r18, Y+2	; 0x02
 18a:	23 2b       	or	r18, r19
 18c:	fc 01       	movw	r30, r24
 18e:	20 83       	st	Z, r18
		
		
    }
 190:	bb cf       	rjmp	.-138    	; 0x108 <main+0x6a>

00000192 <_exit>:
 192:	f8 94       	cli

00000194 <__stop_program>:
 194:	ff cf       	rjmp	.-2      	; 0x194 <__stop_program>
