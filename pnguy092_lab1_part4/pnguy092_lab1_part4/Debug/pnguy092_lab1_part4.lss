
pnguy092_lab1_part4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000166  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001ba  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001ec  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000022c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000878  00000000  00000000  0000024c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007a3  00000000  00000000  00000ac4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000027c  00000000  00000000  00001267  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000014e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000040c  00000000  00000000  00001518  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  00001924  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000196c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	63 c0       	rjmp	.+198    	; 0x162 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:

#include <avr/io.h>


int main(void)
{
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	00 d0       	rcall	.+0      	; 0xa4 <main+0x6>
  a4:	00 d0       	rcall	.+0      	; 0xa6 <main+0x8>
  a6:	00 d0       	rcall	.+0      	; 0xa8 <main+0xa>
  a8:	cd b7       	in	r28, 0x3d	; 61
  aa:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
	DDRA = 0x00; PORTA = 0xFF;
  ac:	81 e2       	ldi	r24, 0x21	; 33
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	fc 01       	movw	r30, r24
  b2:	10 82       	st	Z, r1
  b4:	82 e2       	ldi	r24, 0x22	; 34
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	2f ef       	ldi	r18, 0xFF	; 255
  ba:	fc 01       	movw	r30, r24
  bc:	20 83       	st	Z, r18
	DDRB = 0x00; PORTB = 0xFF;
  be:	84 e2       	ldi	r24, 0x24	; 36
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	fc 01       	movw	r30, r24
  c4:	10 82       	st	Z, r1
  c6:	85 e2       	ldi	r24, 0x25	; 37
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	2f ef       	ldi	r18, 0xFF	; 255
  cc:	fc 01       	movw	r30, r24
  ce:	20 83       	st	Z, r18
	DDRC = 0x00; PORTC = 0xFF;
  d0:	87 e2       	ldi	r24, 0x27	; 39
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	fc 01       	movw	r30, r24
  d6:	10 82       	st	Z, r1
  d8:	88 e2       	ldi	r24, 0x28	; 40
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	2f ef       	ldi	r18, 0xFF	; 255
  de:	fc 01       	movw	r30, r24
  e0:	20 83       	st	Z, r18
	DDRD = 0xFF; PORTD = 0x00;
  e2:	8a e2       	ldi	r24, 0x2A	; 42
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	2f ef       	ldi	r18, 0xFF	; 255
  e8:	fc 01       	movw	r30, r24
  ea:	20 83       	st	Z, r18
  ec:	8b e2       	ldi	r24, 0x2B	; 43
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	fc 01       	movw	r30, r24
  f2:	10 82       	st	Z, r1
	
	unsigned char tempA = 0x00;
  f4:	1b 82       	std	Y+3, r1	; 0x03
	unsigned char tempB = 0x00;
  f6:	1c 82       	std	Y+4, r1	; 0x04
	unsigned char tempC = 0x00;
  f8:	1d 82       	std	Y+5, r1	; 0x05
	
    while (1) 
    {
		unsigned char pd0 = 0x00;
  fa:	19 82       	std	Y+1, r1	; 0x01
		unsigned char pd1 = 0x00;
  fc:	1a 82       	std	Y+2, r1	; 0x02
		unsigned char total_weight = 0x00;
  fe:	1e 82       	std	Y+6, r1	; 0x06
		
		//temp variables hold value of PIN's A-C
		tempA = PINA;
 100:	80 e2       	ldi	r24, 0x20	; 32
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	fc 01       	movw	r30, r24
 106:	80 81       	ld	r24, Z
 108:	8b 83       	std	Y+3, r24	; 0x03
		tempB = PINB;
 10a:	83 e2       	ldi	r24, 0x23	; 35
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	fc 01       	movw	r30, r24
 110:	80 81       	ld	r24, Z
 112:	8c 83       	std	Y+4, r24	; 0x04
		tempC = PINC;
 114:	86 e2       	ldi	r24, 0x26	; 38
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	fc 01       	movw	r30, r24
 11a:	80 81       	ld	r24, Z
 11c:	8d 83       	std	Y+5, r24	; 0x05
		
		total_weight = tempA | tempB | tempC;
 11e:	9b 81       	ldd	r25, Y+3	; 0x03
 120:	8c 81       	ldd	r24, Y+4	; 0x04
 122:	98 2b       	or	r25, r24
 124:	8d 81       	ldd	r24, Y+5	; 0x05
 126:	89 2b       	or	r24, r25
 128:	8e 83       	std	Y+6, r24	; 0x06
		if(total_weight > 0x8C){
 12a:	8e 81       	ldd	r24, Y+6	; 0x06
 12c:	8d 38       	cpi	r24, 0x8D	; 141
 12e:	10 f0       	brcs	.+4      	; 0x134 <main+0x96>
			pd0 = 0x01;
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	89 83       	std	Y+1, r24	; 0x01
		}
		if(tempA - tempC > 0x50){
 134:	8b 81       	ldd	r24, Y+3	; 0x03
 136:	28 2f       	mov	r18, r24
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	8d 81       	ldd	r24, Y+5	; 0x05
 13c:	88 2f       	mov	r24, r24
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	a9 01       	movw	r20, r18
 142:	48 1b       	sub	r20, r24
 144:	59 0b       	sbc	r21, r25
 146:	ca 01       	movw	r24, r20
 148:	81 35       	cpi	r24, 0x51	; 81
 14a:	91 05       	cpc	r25, r1
 14c:	14 f0       	brlt	.+4      	; 0x152 <main+0xb4>
			pd1 = 0x02;
 14e:	82 e0       	ldi	r24, 0x02	; 2
 150:	8a 83       	std	Y+2, r24	; 0x02
		}
		
		
		
		PORTD = pd0 | pd1;
 152:	8b e2       	ldi	r24, 0x2B	; 43
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	39 81       	ldd	r19, Y+1	; 0x01
 158:	2a 81       	ldd	r18, Y+2	; 0x02
 15a:	23 2b       	or	r18, r19
 15c:	fc 01       	movw	r30, r24
 15e:	20 83       	st	Z, r18
		
		
    }
 160:	cc cf       	rjmp	.-104    	; 0xfa <main+0x5c>

00000162 <_exit>:
 162:	f8 94       	cli

00000164 <__stop_program>:
 164:	ff cf       	rjmp	.-2      	; 0x164 <__stop_program>
